[{"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\index.js":"1","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\App.js":"2","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\reportWebVitals.js":"3","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\interviewers.js":"4","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\BtnAddInterviewer.js":"5","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\interviewer.js":"6","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Interviewers.js":"7","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Interviewer.js":"8","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Candidates.js":"9","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Candidate.js":"10","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalInterviewer.js":"11","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\CandidateDetails.js":"12","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateDetail.js":"13","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateSkills.js":"14","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\NoSkillsSelected.js":"15","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\SkillsSelected.js":"16","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Footer.js":"17","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Questions.js":"18","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\QuestionsCarousel.js":"19","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Results.js":"20","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\interviewers-context.js":"21","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\candidates-context.js":"22","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalCandidate.js":"23","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalSkills.js":"24","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\skills-context.js":"25","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\answers-context.js":"26","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Qualification.js":"27"},{"size":952,"mtime":1609354782736,"results":"28","hashOfConfig":"29"},{"size":1719,"mtime":1610084006252,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":2325,"mtime":1609286751787,"results":"32","hashOfConfig":"29"},{"size":469,"mtime":1609281423704,"results":"33","hashOfConfig":"29"},{"size":1009,"mtime":1609287815883,"results":"34","hashOfConfig":"29"},{"size":3037,"mtime":1609429891120,"results":"35","hashOfConfig":"29"},{"size":1066,"mtime":1609800123091,"results":"36","hashOfConfig":"29"},{"size":3121,"mtime":1609948878556,"results":"37","hashOfConfig":"29"},{"size":1240,"mtime":1610078750648,"results":"38","hashOfConfig":"29"},{"size":4052,"mtime":1609884466148,"results":"39","hashOfConfig":"29"},{"size":2050,"mtime":1610349485198,"results":"40","hashOfConfig":"29"},{"size":1418,"mtime":1610340651538,"results":"41","hashOfConfig":"29"},{"size":1518,"mtime":1610396887768,"results":"42","hashOfConfig":"29"},{"size":1034,"mtime":1610040188916,"results":"43","hashOfConfig":"29"},{"size":1071,"mtime":1610396911507,"results":"44","hashOfConfig":"29"},{"size":1211,"mtime":1610395499226,"results":"45","hashOfConfig":"29"},{"size":1705,"mtime":1610348994173,"results":"46","hashOfConfig":"29"},{"size":5711,"mtime":1610333458918,"results":"47","hashOfConfig":"29"},{"size":4065,"mtime":1610398823627,"results":"48","hashOfConfig":"29"},{"size":1336,"mtime":1609436726262,"results":"49","hashOfConfig":"29"},{"size":1342,"mtime":1610349594929,"results":"50","hashOfConfig":"29"},{"size":4406,"mtime":1609949045084,"results":"51","hashOfConfig":"29"},{"size":3195,"mtime":1610395023295,"results":"52","hashOfConfig":"29"},{"size":789,"mtime":1610395669249,"results":"53","hashOfConfig":"29"},{"size":6683,"mtime":1610396120276,"results":"54","hashOfConfig":"29"},{"size":1553,"mtime":1610392801686,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"d9ayj5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\index.js",[],["115","116"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\App.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\reportWebVitals.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\interviewers.js",["117"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\BtnAddInterviewer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\interviewer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Interviewers.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Interviewer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Candidates.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Candidate.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalInterviewer.js",["118"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles, Dialog, DialogContent, Typography, FormControl, DialogActions, Button, TextField } from '@material-ui/core';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport { InterviewersContext } from '../context/interviewers-context';\r\n\r\nexport default function ModalInterviewer(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useContext(InterviewersContext);\r\n\r\n  const newIdInter = props.totalInters.length + 1;\r\n  const [ idInterviewer, setIdInterviewer ] = useState('');\r\n  const [ nameInterviewer, setNameInterviewer ] = useState('');\r\n  const [ eidInterviewer, setEidInterviewer ] = useState('');\r\n  const [ idEditInterVal, setIdEditInterVal ] = useState(null);\r\n\r\n  const closeModal = props.changeState;\r\n\r\n  const onSubmit = () => {\r\n    if(props.interIdSelected !== 0 ) {\r\n      dispatch({\r\n        type: \"EDIT_INTERVIEWER\",\r\n        payload: {\r\n          id: Number(idEditInterVal),\r\n          idInter: Number(idInterviewer),\r\n          name: nameInterviewer,\r\n          eid: eidInterviewer\r\n        }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_INTERVIEWER\",\r\n        payload: {\r\n          id: newIdInter,\r\n          idInter: Number(idInterviewer),\r\n          name: nameInterviewer,\r\n          eid: eidInterviewer\r\n        }\r\n      });\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const changeIdInter = event => {\r\n    setIdInterviewer(event.target.value);\r\n  };\r\n\r\n  const changeNameInter = event => {\r\n    setNameInterviewer(event.target.value);\r\n  };\r\n\r\n  const changeEidInter = event => {\r\n    setEidInterviewer(event.target.value);\r\n  };\r\n\r\n  useEffect(() =>{\r\n    if(props.interIdSelected !== 0 ) {\r\n      props.totalInters.forEach(inter => {\r\n        if ( inter.idInter === props.interIdSelected) {\r\n          setIdEditInterVal(inter.id);\r\n          setIdInterviewer(inter.idInter);\r\n          setNameInterviewer(inter.name);\r\n          setEidInterviewer(inter.eid);\r\n        }\r\n      });\r\n    }\r\n  }, [props.interIdSelected, props.totalInters]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.modalState}\r\n      onClose={props.changeState}\r\n      className={classes.root}\r\n    >\r\n      <div className='title'>\r\n        <PersonAddRoundedIcon color='primary' fontSize='large' />\r\n        <Typography variant='h5'>\r\n          {props.interIdSelected === 0 ? `Nuevo entrevistador` : `Editar entrevistador: ${props.interIdSelected}`}\r\n        </Typography>\r\n      </div>\r\n\r\n      <DialogContent>\r\n        <FormControl fullWidth>\r\n          <Typography>Nombre completo</Typography>\r\n          <TextField placeholder='Ingrese el nombre del empleado' onChange={changeNameInter} value={nameInterviewer} />\r\n\r\n          <Typography>ID del empleado</Typography>\r\n          <TextField placeholder='Ingrese el ID del empleado' onChange={changeIdInter} value={idInterviewer} />\r\n\r\n          <Typography>EID</Typography>\r\n          <TextField placeholder='Ingrese el EID del empleado' onChange={changeEidInter} value={eidInterviewer} />\r\n        </FormControl>\r\n      </DialogContent>\r\n\r\n      <DialogActions className='actions_modal'>\r\n          <Button\r\n            variant=\"contained\"\r\n            color='secondary'\r\n            onClick={() => history.push(`candidates-of/${props.interIdSelected}`)}\r\n            disabled={props.interIdSelected === 0 ? true : false }>\r\n            Continuar\r\n          </Button>\r\n        <Button variant=\"contained\" color='primary' onClick={onSubmit}>Guardar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .title': {\r\n      display: 'flex',\r\n      padding: '24px',\r\n\r\n      '& h5': {\r\n        marginLeft: '10px'\r\n      }\r\n    },\r\n    '& p': {\r\n      fontWeight: 'bold'\r\n    },\r\n    '& .MuiInput-root': {\r\n      marginBottom: '2em'\r\n    },\r\n    '& .actions_modal': {\r\n      justifyContent: 'space-between'\r\n    }\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\CandidateDetails.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateDetail.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateSkills.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\NoSkillsSelected.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\SkillsSelected.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Footer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Questions.js",["119"],"import React, { useContext } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { makeStyles, Container } from '@material-ui/core';\r\nimport QuestionsCarousel from '../components/QuestionsCarousel';\r\nimport Footer from '../components/Footer';\r\nimport { SkillsContext } from '../context/skills-context';\r\nimport { AnswersContext } from '../context/answers-context';\r\n\r\nexport default function Questions() {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch();\r\n  const [ skillsFromContext ] = useContext(SkillsContext);\r\n  const [ totalQuestions ] = useContext(AnswersContext);\r\n\r\n  const idCandidate = Number(url.slice(url.lastIndexOf('/') + 1, url.length));\r\n  const skillsByCandidate = skillsFromContext.skills.filter(\r\n    candidate => candidate.candidateId === idCandidate\r\n  );\r\n  let questionsByCandidate = [];\r\n  const questions = totalQuestions.questions;\r\n  \r\n  const setQuestionsByCandidate = () => {\r\n    questions.filter( question => {\r\n      skillsByCandidate[0].categories.forEach((category) => {\r\n        if(question.category === category.category) {\r\n          questionsByCandidate.push(question);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {setQuestionsByCandidate()}\r\n\r\n      <Container maxWidth='xl'>\r\n        <h2>Preguntas</h2>\r\n      </Container>\r\n\r\n      <QuestionsCarousel\r\n        questionsCandidate={questionsByCandidate}\r\n        idCan={idCandidate}\r\n      />\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .back_btn': {\r\n      width: '10em',\r\n      margin: '2em',\r\n      backgroundColor: '#d10808',\r\n      color: '#fff'\r\n    },\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\QuestionsCarousel.js",["120"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  MobileStepper,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  TextField } from '@material-ui/core';\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport { AnswersContext } from '../context/answers-context';\r\n\r\nexport default function QuestionsCarousel(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useContext(AnswersContext);\r\n\r\n  const questionsByCandidate = props.questionsCandidate;\r\n  const maxQuestions = props.questionsCandidate.length;\r\n  const idCandidate = props.idCan;\r\n  let tempDefaultAnswers = [];\r\n\r\n  const [ activeQuestion, setActiveQuestion ] = useState(0);\r\n  const [ radioValue, setAnswerValue] = useState(tempDefaultAnswers);\r\n\r\n  const setDefaultAnswers = () => {\r\n    questionsByCandidate.forEach((question, i) => {\r\n      tempDefaultAnswers.push({\r\n        idAnswer: i + 1,\r\n        idCandidate: idCandidate,\r\n        idQuestion: question.idQuestion,\r\n        question: question.question,\r\n        category: question.category,\r\n        categoryName: question.categoryName,\r\n        answer: '',\r\n        comments: ''\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveQuestion((prevActiveQuestion) => prevActiveQuestion + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveQuestion((prevActiveQuestion) => prevActiveQuestion - 1);\r\n  };\r\n\r\n  const handleChangeAnswer = (event) => {\r\n    let temNewArray = [...radioValue];\r\n    temNewArray[event.target.name-1] = {\r\n      idAnswer: Number(event.target.name),\r\n      idCandidate: idCandidate,\r\n      idQuestion: tempDefaultAnswers[activeQuestion].idQuestion,\r\n      question: tempDefaultAnswers[activeQuestion].question,\r\n      category: tempDefaultAnswers[activeQuestion].category,\r\n      categoryName: tempDefaultAnswers[activeQuestion].categoryName,\r\n      answer: event.target.value,\r\n      comments: ''\r\n    };\r\n    setAnswerValue(temNewArray);\r\n  };\r\n\r\n  const handleChangeComments = (event) => {\r\n    let temNewArray = [...radioValue];\r\n    temNewArray[event.target.name-1] = {\r\n      ...temNewArray[event.target.name-1],\r\n      answer: radioValue[event.target.name-1].answer,\r\n      comments: event.target.value\r\n    };\r\n    setAnswerValue(temNewArray);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch({\r\n      type: \"SEND_ANSWERS\",\r\n      payload: [...radioValue]\r\n    });\r\n    goToResults();\r\n  }\r\n\r\n  const goToResults = () => {\r\n    history.push(`/results/${idCandidate}`);\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {setDefaultAnswers()}\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography color='textSecondary' variant='h5'>{questionsByCandidate[activeQuestion].categoryName}</Typography>\r\n        <Typography variant='h5'>{questionsByCandidate[activeQuestion].question}</Typography>\r\n\r\n        <FormControl component=\"fieldset\" >\r\n          <RadioGroup\r\n            className='options'\r\n            onChange={handleChangeAnswer}\r\n            name={tempDefaultAnswers[activeQuestion].idAnswer}\r\n            value={radioValue[activeQuestion].answer}>\r\n            <FormControlLabel value=\"correcto\" control={<Radio color='primary' />} label=\"Correcto\" />\r\n            <FormControlLabel value=\"incorrecto\" control={<Radio color='primary' />} label=\"Incorrecto\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Comentarios\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          name={tempDefaultAnswers[activeQuestion].idAnswer}\r\n          value={radioValue[activeQuestion].comments}\r\n          onChange={handleChangeComments}\r\n        />\r\n      </Paper>\r\n\r\n      <MobileStepper\r\n        className='carousel_actions'\r\n        steps={maxQuestions}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeQuestion}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeQuestion === maxQuestions - 1}>\r\n            {theme.direction === 'rtl' ? <ArrowBackIosRoundedIcon color='primary' /> : <ArrowForwardIosRoundedIcon color='primary' />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeQuestion === 0}>\r\n            {theme.direction === 'rtl' ? <ArrowForwardIosRoundedIcon color='primary' /> : <ArrowBackIosRoundedIcon color='primary' />}\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      {activeQuestion === maxQuestions-1?\r\n        <Button variant='contained' className='send_test' color='primary' onClick={onSubmit}>\r\n          Finalizar\r\n        </Button>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\r\n    '& .options': {\r\n      flexDirection: 'initial'\r\n    },\r\n\r\n    '& .carousel_actions': {\r\n      background: 'none',\r\n\r\n      '& button': {\r\n        top: '-10em'\r\n      },\r\n\r\n      '& svg': {\r\n        fontSize: '7em'\r\n      }\r\n    },\r\n\r\n    '& .send_test': {\r\n      position: 'absolute',\r\n      right: '2em',\r\n      bottom: '100px',\r\n      zIndex: '99'\r\n    }\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n    '& h5': {\r\n      margin: '1rem 0'\r\n    },\r\n\r\n    '& fieldset': {\r\n      marginBottom: '1rem'\r\n    }\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Results.js",["121"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\interviewers-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\candidates-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalCandidate.js",["122"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {\r\n  makeStyles,\r\n  Dialog,\r\n  DialogContent,\r\n  Typography,\r\n  FormControl,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport { CandidatesContext } from '../context/candidates-context';\r\n\r\nexport default function ModalCandidate(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useContext(CandidatesContext);\r\n\r\n  const newIdCandi = props.totalCandis.length + 1;\r\n  const [ idEditCandidate, setIdEditCandidate ] = useState(null);\r\n  const [ nameCandidate, setNameCandidate ] = useState('');\r\n  const [ emailCandidate, setEmailCandidate ] = useState('');\r\n  const [ typeCandidate, setTypeCandidate ] = useState('');\r\n\r\n  const closeModal = props.changeState;\r\n  let { url } = useRouteMatch();\r\n\r\n  const onSubmit = () => {\r\n    if(props.candiIdSelected !== 0 ) {\r\n      dispatch({\r\n        type: \"EDIT_INTERVIEWER\",\r\n        payload: {\r\n          id: Number(idEditCandidate),\r\n          name: nameCandidate,\r\n          email: emailCandidate,\r\n          type: typeCandidate\r\n        }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_CANDIDATES\",\r\n        payload: {\r\n          id: newIdCandi,\r\n          name: nameCandidate,\r\n          email: emailCandidate,\r\n          type: typeCandidate\r\n        }\r\n      });\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const changeNameCandidate = event => {\r\n    setNameCandidate(event.target.value);\r\n  };\r\n\r\n  const changeEmailCandidate = event => {\r\n    setEmailCandidate(event.target.value);\r\n  };\r\n\r\n  const changeTypeCandidate = event => {\r\n    setTypeCandidate(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.candiIdSelected !== 0 ) {\r\n      props.totalCandis.forEach(candi => {\r\n        if ( candi.id === props.candiIdSelected) {\r\n          setIdEditCandidate(candi.id);\r\n          setNameCandidate(candi.name);\r\n          setEmailCandidate(candi.email);\r\n          setTypeCandidate(candi.type);\r\n        }\r\n      });\r\n    }\r\n  }, [props.candiIdSelected, props.totalCandis]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.modalState}\r\n      onClose={props.changeState}\r\n      className={classes.root}\r\n    >\r\n      <div className='title'>\r\n        <PersonAddRoundedIcon color='primary' fontSize='large' />\r\n        <Typography variant='h5'>\r\n          {props.candiIdSelected === 0 ? `Nuevo candidato` : `Editar candidato: ${props.candiIdSelected}`}\r\n        </Typography>\r\n      </div>\r\n\r\n      <DialogContent>\r\n        <FormControl fullWidth>\r\n          <Typography>Nombre completo</Typography>\r\n          <TextField placeholder='Ingrese el nombre del candidato' onChange={changeNameCandidate} value={nameCandidate} />\r\n\r\n          <Typography>Correo electrónico</Typography>\r\n          <TextField placeholder='Ingrese el ID del empleado' onChange={changeEmailCandidate} value={emailCandidate} />\r\n\r\n          <Typography>Tipo</Typography>\r\n          <Select\r\n            value={typeCandidate}\r\n            onChange={changeTypeCandidate}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n          >\r\n            <MenuItem value=''>Seleccione el tipo</MenuItem>\r\n            <MenuItem value={'interno'}>Interno</MenuItem>\r\n            <MenuItem value={'externo'}>Externo</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n\r\n      <DialogActions className='actions_modal'>\r\n          <Button\r\n            variant=\"contained\"\r\n            color='secondary'\r\n            onClick={() => history.push(`${url}/candidate/${props.candiIdSelected}`)}\r\n            disabled={props.candiIdSelected === 0 ? true : false }>\r\n            Continuar\r\n          </Button>\r\n        <Button variant=\"contained\" color='primary' onClick={onSubmit}>Guardar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .title': {\r\n      display: 'flex',\r\n      padding: '24px',\r\n\r\n      '& h5': {\r\n        marginLeft: '10px'\r\n      }\r\n    },\r\n    '& p': {\r\n      fontWeight: 'bold'\r\n    },\r\n    '& .MuiInput-root': {\r\n      marginBottom: '2em'\r\n    },\r\n    '& .actions_modal': {\r\n      justifyContent: 'space-between'\r\n    }\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalSkills.js",["123","124"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\skills-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\answers-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Qualification.js",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"134","line":10,"column":11,"nodeType":"132","messageId":"133","endLine":10,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":23,"column":32,"nodeType":"137","messageId":"138","endLine":23,"endColumn":34},{"ruleId":"130","severity":1,"message":"134","line":23,"column":11,"nodeType":"132","messageId":"133","endLine":23,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":37,"column":48,"nodeType":"137","messageId":"138","endLine":37,"endColumn":50},{"ruleId":"130","severity":1,"message":"134","line":21,"column":11,"nodeType":"132","messageId":"133","endLine":21,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":43,"column":11,"nodeType":"132","messageId":"133","endLine":43,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":50,"column":25,"nodeType":"137","messageId":"138","endLine":50,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":17,"column":37,"nodeType":"137","messageId":"138","endLine":17,"endColumn":39},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]