[{"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\index.js":"1","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\App.js":"2","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\reportWebVitals.js":"3","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\interviewers.js":"4","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\BtnAddInterviewer.js":"5","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\interviewer.js":"6","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Interviewers.js":"7","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Interviewer.js":"8","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Candidates.js":"9","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Candidate.js":"10","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalInterviewer.js":"11","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\CandidateDetails.js":"12","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateDetail.js":"13","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateSkills.js":"14","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\NoSkillsSelected.js":"15","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\SkillsSelected.js":"16","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Footer.js":"17","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Questions.js":"18","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\QuestionsCarousel.js":"19","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Results.js":"20","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\interviewers-context.js":"21","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\candidates-context.js":"22","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalCandidate.js":"23","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalSkills.js":"24","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\skills-context.js":"25","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\answers-context.js":"26"},{"size":952,"mtime":1609354782736,"results":"27","hashOfConfig":"28"},{"size":1719,"mtime":1610084006252,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":2325,"mtime":1609286751787,"results":"31","hashOfConfig":"28"},{"size":469,"mtime":1609281423704,"results":"32","hashOfConfig":"28"},{"size":1009,"mtime":1609287815883,"results":"33","hashOfConfig":"28"},{"size":3037,"mtime":1609429891120,"results":"34","hashOfConfig":"28"},{"size":1066,"mtime":1609800123091,"results":"35","hashOfConfig":"28"},{"size":3121,"mtime":1609948878556,"results":"36","hashOfConfig":"28"},{"size":1240,"mtime":1610078750648,"results":"37","hashOfConfig":"28"},{"size":4052,"mtime":1609884466148,"results":"38","hashOfConfig":"28"},{"size":2050,"mtime":1610349485198,"results":"39","hashOfConfig":"28"},{"size":1418,"mtime":1610340651538,"results":"40","hashOfConfig":"28"},{"size":1818,"mtime":1610123310247,"results":"41","hashOfConfig":"28"},{"size":1034,"mtime":1610040188916,"results":"42","hashOfConfig":"28"},{"size":1071,"mtime":1610343935438,"results":"43","hashOfConfig":"28"},{"size":2169,"mtime":1610120600049,"results":"44","hashOfConfig":"28"},{"size":1705,"mtime":1610348994173,"results":"45","hashOfConfig":"28"},{"size":5711,"mtime":1610333458918,"results":"46","hashOfConfig":"28"},{"size":3396,"mtime":1610348891281,"results":"47","hashOfConfig":"28"},{"size":1336,"mtime":1609436726262,"results":"48","hashOfConfig":"28"},{"size":1342,"mtime":1610349594929,"results":"49","hashOfConfig":"28"},{"size":4406,"mtime":1609949045084,"results":"50","hashOfConfig":"28"},{"size":2660,"mtime":1610121563483,"results":"51","hashOfConfig":"28"},{"size":1905,"mtime":1610123388658,"results":"52","hashOfConfig":"28"},{"size":7642,"mtime":1610349031730,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"d9ayj5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\index.js",[],["111","112"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\App.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\reportWebVitals.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\interviewers.js",["113"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\BtnAddInterviewer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\interviewer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Interviewers.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Interviewer.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Candidates.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Candidate.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalInterviewer.js",["114"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles, Dialog, DialogContent, Typography, FormControl, DialogActions, Button, TextField } from '@material-ui/core';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport { InterviewersContext } from '../context/interviewers-context';\r\n\r\nexport default function ModalInterviewer(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useContext(InterviewersContext);\r\n\r\n  const newIdInter = props.totalInters.length + 1;\r\n  const [ idInterviewer, setIdInterviewer ] = useState('');\r\n  const [ nameInterviewer, setNameInterviewer ] = useState('');\r\n  const [ eidInterviewer, setEidInterviewer ] = useState('');\r\n  const [ idEditInterVal, setIdEditInterVal ] = useState(null);\r\n\r\n  const closeModal = props.changeState;\r\n\r\n  const onSubmit = () => {\r\n    if(props.interIdSelected !== 0 ) {\r\n      dispatch({\r\n        type: \"EDIT_INTERVIEWER\",\r\n        payload: {\r\n          id: Number(idEditInterVal),\r\n          idInter: Number(idInterviewer),\r\n          name: nameInterviewer,\r\n          eid: eidInterviewer\r\n        }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_INTERVIEWER\",\r\n        payload: {\r\n          id: newIdInter,\r\n          idInter: Number(idInterviewer),\r\n          name: nameInterviewer,\r\n          eid: eidInterviewer\r\n        }\r\n      });\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const changeIdInter = event => {\r\n    setIdInterviewer(event.target.value);\r\n  };\r\n\r\n  const changeNameInter = event => {\r\n    setNameInterviewer(event.target.value);\r\n  };\r\n\r\n  const changeEidInter = event => {\r\n    setEidInterviewer(event.target.value);\r\n  };\r\n\r\n  useEffect(() =>{\r\n    if(props.interIdSelected !== 0 ) {\r\n      props.totalInters.forEach(inter => {\r\n        if ( inter.idInter === props.interIdSelected) {\r\n          setIdEditInterVal(inter.id);\r\n          setIdInterviewer(inter.idInter);\r\n          setNameInterviewer(inter.name);\r\n          setEidInterviewer(inter.eid);\r\n        }\r\n      });\r\n    }\r\n  }, [props.interIdSelected, props.totalInters]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.modalState}\r\n      onClose={props.changeState}\r\n      className={classes.root}\r\n    >\r\n      <div className='title'>\r\n        <PersonAddRoundedIcon color='primary' fontSize='large' />\r\n        <Typography variant='h5'>\r\n          {props.interIdSelected === 0 ? `Nuevo entrevistador` : `Editar entrevistador: ${props.interIdSelected}`}\r\n        </Typography>\r\n      </div>\r\n\r\n      <DialogContent>\r\n        <FormControl fullWidth>\r\n          <Typography>Nombre completo</Typography>\r\n          <TextField placeholder='Ingrese el nombre del empleado' onChange={changeNameInter} value={nameInterviewer} />\r\n\r\n          <Typography>ID del empleado</Typography>\r\n          <TextField placeholder='Ingrese el ID del empleado' onChange={changeIdInter} value={idInterviewer} />\r\n\r\n          <Typography>EID</Typography>\r\n          <TextField placeholder='Ingrese el EID del empleado' onChange={changeEidInter} value={eidInterviewer} />\r\n        </FormControl>\r\n      </DialogContent>\r\n\r\n      <DialogActions className='actions_modal'>\r\n          <Button\r\n            variant=\"contained\"\r\n            color='secondary'\r\n            onClick={() => history.push(`candidates-of/${props.interIdSelected}`)}\r\n            disabled={props.interIdSelected === 0 ? true : false }>\r\n            Continuar\r\n          </Button>\r\n        <Button variant=\"contained\" color='primary' onClick={onSubmit}>Guardar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .title': {\r\n      display: 'flex',\r\n      padding: '24px',\r\n\r\n      '& h5': {\r\n        marginLeft: '10px'\r\n      }\r\n    },\r\n    '& p': {\r\n      fontWeight: 'bold'\r\n    },\r\n    '& .MuiInput-root': {\r\n      marginBottom: '2em'\r\n    },\r\n    '& .actions_modal': {\r\n      justifyContent: 'space-between'\r\n    }\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\CandidateDetails.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateDetail.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\CardCandidateSkills.js",["115","116","117"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles, Card, Typography, CardContent, CircularProgress } from '@material-ui/core';\r\nimport NoSkillsSelected from './NoSkillsSelected';\r\nimport SkillsSelected from './SkillsSelected';\r\nimport ModalSkills from './ModalSkills';\r\nimport { SkillsContext } from '../context/skills-context';\r\n\r\nexport default function CardCandidateSkills(props) {\r\n  const classes = useStyles();\r\n  const [ isOpen, setModalState ] = useState(false);\r\n  const [ state, dispatch ] = useContext(SkillsContext);\r\n  const [ currentSkills, setCurrentSkills ] = useState({});\r\n  const totalSkills = state.skills;\r\n  \r\n  useEffect(() => {\r\n    setSkillsByCandidate();\r\n  }, []);\r\n\r\n  const setSkillsByCandidate = () => {\r\n    totalSkills.forEach(skill => {\r\n      if (skill.candidateId === props.idCandidate) {\r\n        console.log(skill.categories);\r\n        setCurrentSkills(skill.categories);\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleModalState = (event) => {\r\n    setModalState(!isOpen);\r\n  };\r\n  console.log(totalSkills);\r\n  return(\r\n    <Card className={classes.root}>\r\n      <ModalSkills modalState={isOpen} changeState={handleModalState}/>\r\n\r\n      <CardContent className='candidate_card'>\r\n        <Typography variant='subtitle1' className='title'>Skills a evaluar:</Typography>\r\n\r\n        {currentSkills.length === 0 ?\r\n            <NoSkillsSelected onClick={handleModalState} />\r\n          :\r\n            <SkillsSelected actualSkills={currentSkills.length > 0 ? currentSkills : totalSkills}/>\r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '48%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .title': {\r\n      fontSize: '25px',\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\NoSkillsSelected.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\SkillsSelected.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\Footer.js",["118"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\n\r\nexport default function Candidates() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let { url } = useRouteMatch();\r\n  const idCandidate = Number(url.slice(url.lastIndexOf('/') + 1, url.length));\r\n  const [ textButton, setTextButton ] = useState('');\r\n  const [ route, setRoute ] = useState('');\r\n  const [ visible, setVisible ] = useState(false);\r\n  const [ visibleBack, setVisibleBack ] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    if (url.indexOf('/candidates-of/') === 0 && url.indexOf('/candidate/') === 18) {\r\n      setTextButton('Comenzar');\r\n      setRoute(`/interview/${idCandidate}`);\r\n      setVisible(true);\r\n    } else if (url.indexOf('/results/') === 0) {\r\n      setVisibleBack(false);\r\n    /*}  else if ( url.indexOf('/interview/') === 0) {\r\n      setTextButton('Finalizar');\r\n      setRoute(`/interview/${idCandidate}`);\r\n      setVisible(true);\r\n    */\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }, [url]);\r\n\r\n  return (\r\n    <footer className={classes.root}>\r\n      {visibleBack === true ?\r\n        <Button variant='contained' className='back_btn' onClick={() => history.goBack()}>\r\n          <ArrowBackRoundedIcon />\r\n          Regresar\r\n        </Button>\r\n        :null\r\n      }\r\n\r\n      {visible === true ?\r\n        <Button variant='contained' className='start_btn' color='primary' onClick={() => history.push(route)}>\r\n          {textButton}\r\n          <ArrowForwardRoundedIcon />\r\n        </Button>\r\n        :null\r\n      }\r\n    </footer>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .back_btn': {\r\n      width: '10em',\r\n      margin: '2em',\r\n      backgroundColor: '#d10808',\r\n      color: '#fff'\r\n    },\r\n\r\n    '& .back_btn:hover': {\r\n      backgroundColor: '#a10303'\r\n    },\r\n\r\n    '& .start_btn': {\r\n      width: '10em',\r\n      margin: '2em'\r\n    }\r\n  },\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Questions.js",["119"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\QuestionsCarousel.js",["120"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\routes\\Results.js",["121","122"],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\interviewers-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\candidates-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalCandidate.js",["123"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {\r\n  makeStyles,\r\n  Dialog,\r\n  DialogContent,\r\n  Typography,\r\n  FormControl,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport { CandidatesContext } from '../context/candidates-context';\r\n\r\nexport default function ModalCandidate(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useContext(CandidatesContext);\r\n\r\n  const newIdCandi = props.totalCandis.length + 1;\r\n  const [ idEditCandidate, setIdEditCandidate ] = useState(null);\r\n  const [ nameCandidate, setNameCandidate ] = useState('');\r\n  const [ emailCandidate, setEmailCandidate ] = useState('');\r\n  const [ typeCandidate, setTypeCandidate ] = useState('');\r\n\r\n  const closeModal = props.changeState;\r\n  let { url } = useRouteMatch();\r\n\r\n  const onSubmit = () => {\r\n    if(props.candiIdSelected !== 0 ) {\r\n      dispatch({\r\n        type: \"EDIT_INTERVIEWER\",\r\n        payload: {\r\n          id: Number(idEditCandidate),\r\n          name: nameCandidate,\r\n          email: emailCandidate,\r\n          type: typeCandidate\r\n        }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_CANDIDATES\",\r\n        payload: {\r\n          id: newIdCandi,\r\n          name: nameCandidate,\r\n          email: emailCandidate,\r\n          type: typeCandidate\r\n        }\r\n      });\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const changeNameCandidate = event => {\r\n    setNameCandidate(event.target.value);\r\n  };\r\n\r\n  const changeEmailCandidate = event => {\r\n    setEmailCandidate(event.target.value);\r\n  };\r\n\r\n  const changeTypeCandidate = event => {\r\n    setTypeCandidate(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.candiIdSelected !== 0 ) {\r\n      props.totalCandis.forEach(candi => {\r\n        if ( candi.id === props.candiIdSelected) {\r\n          setIdEditCandidate(candi.id);\r\n          setNameCandidate(candi.name);\r\n          setEmailCandidate(candi.email);\r\n          setTypeCandidate(candi.type);\r\n        }\r\n      });\r\n    }\r\n  }, [props.candiIdSelected, props.totalCandis]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.modalState}\r\n      onClose={props.changeState}\r\n      className={classes.root}\r\n    >\r\n      <div className='title'>\r\n        <PersonAddRoundedIcon color='primary' fontSize='large' />\r\n        <Typography variant='h5'>\r\n          {props.candiIdSelected === 0 ? `Nuevo candidato` : `Editar candidato: ${props.candiIdSelected}`}\r\n        </Typography>\r\n      </div>\r\n\r\n      <DialogContent>\r\n        <FormControl fullWidth>\r\n          <Typography>Nombre completo</Typography>\r\n          <TextField placeholder='Ingrese el nombre del candidato' onChange={changeNameCandidate} value={nameCandidate} />\r\n\r\n          <Typography>Correo electrónico</Typography>\r\n          <TextField placeholder='Ingrese el ID del empleado' onChange={changeEmailCandidate} value={emailCandidate} />\r\n\r\n          <Typography>Tipo</Typography>\r\n          <Select\r\n            value={typeCandidate}\r\n            onChange={changeTypeCandidate}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n          >\r\n            <MenuItem value=''>Seleccione el tipo</MenuItem>\r\n            <MenuItem value={'interno'}>Interno</MenuItem>\r\n            <MenuItem value={'externo'}>Externo</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n\r\n      <DialogActions className='actions_modal'>\r\n          <Button\r\n            variant=\"contained\"\r\n            color='secondary'\r\n            onClick={() => history.push(`${url}/candidate/${props.candiIdSelected}`)}\r\n            disabled={props.candiIdSelected === 0 ? true : false }>\r\n            Continuar\r\n          </Button>\r\n        <Button variant=\"contained\" color='primary' onClick={onSubmit}>Guardar</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .title': {\r\n      display: 'flex',\r\n      padding: '24px',\r\n\r\n      '& h5': {\r\n        marginLeft: '10px'\r\n      }\r\n    },\r\n    '& p': {\r\n      fontWeight: 'bold'\r\n    },\r\n    '& .MuiInput-root': {\r\n      marginBottom: '2em'\r\n    },\r\n    '& .actions_modal': {\r\n      justifyContent: 'space-between'\r\n    }\r\n  }\r\n}));","C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\components\\ModalSkills.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\skills-context.js",[],"C:\\Users\\k.davalos.villanueva\\Documents\\react-interview-app\\src\\context\\answers-context.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"132","line":10,"column":11,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":2,"column":53,"nodeType":"130","messageId":"131","endLine":2,"endColumn":69},{"ruleId":"128","severity":1,"message":"134","line":11,"column":18,"nodeType":"130","messageId":"131","endLine":11,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":17,"column":6,"nodeType":"137","endLine":17,"endColumn":8,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":32,"column":6,"nodeType":"137","endLine":32,"endColumn":11,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":23,"column":32,"nodeType":"143","messageId":"144","endLine":23,"endColumn":34},{"ruleId":"128","severity":1,"message":"132","line":23,"column":11,"nodeType":"130","messageId":"131","endLine":23,"endColumn":16},{"ruleId":"128","severity":1,"message":"145","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":39,"nodeType":"130","messageId":"131","endLine":1,"endColumn":48},{"ruleId":"128","severity":1,"message":"132","line":21,"column":11,"nodeType":"130","messageId":"131","endLine":21,"endColumn":16},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'CircularProgress' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSkillsByCandidate'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'idCandidate'. Either include it or remove the dependency array.",["149"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [setSkillsByCandidate]",{"range":"154","text":"155"},"Update the dependencies array to be: [idCandidate, url]",{"range":"156","text":"157"},[722,724],"[setSkillsByCandidate]",[1275,1280],"[idCandidate, url]"]